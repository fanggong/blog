<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工程 on Connecting the dots</title>
    <link>/categories/%E5%B7%A5%E7%A8%8B/</link>
    <description>Recent content in 工程 on Connecting the dots</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ch</language>
    <lastBuildDate>Fri, 21 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/%E5%B7%A5%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R语言项目环境管理</title>
      <link>/posts/20210521_renv/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/20210521_renv/</guid>
      <description>环境初始化 对环境管理 renv的全局缓存 移除环境 相关包：renv
环境初始化 在一个新的项目中使用renv::init()对环境进行初始化，该操作会生成一个名为renv的文件夹和名为renv.lock的文件。
renv下保存了在环境中已安装的包的文件（准确的说是已安装包的符号链接文件），而renv.lock指定了该项目对renv下的包的相关依赖。
对环境管理 使用renv::restore()和renv::snapshot()对环境进行管理。
renv::restore()根据renv.lock文件安装环境中缺少的包到renv文件夹下（这个描述不是很准确，包的安装位置实际是global package cache中，renv文件夹下存在的是对应包的符号链接文件）。
renv::snapshot()根据当前环境下的项目情况将依赖写入renv.lock文件中。
这里的逻辑有点绕但是很合理：如果某个包已经安装在了renv中但是在实际项目中没有被使用，那么renv::snapshot()是不会将该包写入renv.lock文件中的。这也就是说，我们可以没有什么心理压力地安装各种包了，它只会污染你的开发环境而不会污染生产环境。
renv的全局缓存 在使用了renv的项目中安装新的包时，包并不会被安装在我们安装R时指定的包存储路径，而是安装在了renv的全局包缓存中（global package cache）。两者之间最大的区别我认为在于后者中可以存在同一个包的不同版本。
当使用renv::restore()时，如果该包存在于global package cache中，那么在renv文件夹下会形成该包的符号链接；如果global package cache中不存在该包，那么会先将该包安装到global package cache中，然后形成符号链接。同时可以使用renv::isolate()将cache中的包复制到renv文件夹中从而切断对cache的依赖。
renv的global package cache路径为：
Mac：~/Library/Application Support/renv Linux：~/.local/share/renv Windows：%LOCALAPPDATA%/renv 移除环境 使用renv::deactivate()使renv无效，即项目回到使用全局环境的状态。该命令只会删除.Rprofile文件使得renv相关文件无效，而不会删除renv相关文件以防止需要重新启用renv。但对于我这种轻度强迫症来说，没有用的文件是一定不能留在项目里的，所以我选择手动删除项目中的所有renv相关文件。</description>
    </item>
    
    <item>
      <title>git配置及操作</title>
      <link>/posts/20210408_git/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/20210408_git/</guid>
      <description> </description>
    </item>
    
  </channel>
</rss>
